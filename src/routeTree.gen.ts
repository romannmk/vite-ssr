/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NavLayoutImport } from './routes/_navLayout'
import { Route as NavLayoutIndexImport } from './routes/_navLayout/index'
import { Route as NavLayoutProductsImport } from './routes/_navLayout/products'

// Create/Update Routes

const NavLayoutRoute = NavLayoutImport.update({
  id: '/_navLayout',
  getParentRoute: () => rootRoute,
} as any)

const NavLayoutIndexRoute = NavLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => NavLayoutRoute,
} as any)

const NavLayoutProductsRoute = NavLayoutProductsImport.update({
  path: '/products',
  getParentRoute: () => NavLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_navLayout': {
      id: '/_navLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NavLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_navLayout/products': {
      id: '/_navLayout/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof NavLayoutProductsImport
      parentRoute: typeof NavLayoutImport
    }
    '/_navLayout/': {
      id: '/_navLayout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof NavLayoutIndexImport
      parentRoute: typeof NavLayoutImport
    }
  }
}

// Create and export the route tree

interface NavLayoutRouteChildren {
  NavLayoutProductsRoute: typeof NavLayoutProductsRoute
  NavLayoutIndexRoute: typeof NavLayoutIndexRoute
}

const NavLayoutRouteChildren: NavLayoutRouteChildren = {
  NavLayoutProductsRoute: NavLayoutProductsRoute,
  NavLayoutIndexRoute: NavLayoutIndexRoute,
}

const NavLayoutRouteWithChildren = NavLayoutRoute._addFileChildren(
  NavLayoutRouteChildren,
)

interface FileRoutesByFullPath {
  '': typeof NavLayoutRouteWithChildren
  '/products': typeof NavLayoutProductsRoute
  '/': typeof NavLayoutIndexRoute
}

interface FileRoutesByTo {
  '/products': typeof NavLayoutProductsRoute
  '/': typeof NavLayoutIndexRoute
}

interface FileRoutesById {
  '/_navLayout': typeof NavLayoutRouteWithChildren
  '/_navLayout/products': typeof NavLayoutProductsRoute
  '/_navLayout/': typeof NavLayoutIndexRoute
}

interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '' | '/products' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/products' | '/'
  id: '/_navLayout' | '/_navLayout/products' | '/_navLayout/'
  fileRoutesById: FileRoutesById
}

interface RootRouteChildren {
  NavLayoutRoute: typeof NavLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  NavLayoutRoute: NavLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_navLayout"
      ]
    },
    "/_navLayout": {
      "filePath": "_navLayout.tsx",
      "children": [
        "/_navLayout/products",
        "/_navLayout/"
      ]
    },
    "/_navLayout/products": {
      "filePath": "_navLayout/products.tsx",
      "parent": "/_navLayout"
    },
    "/_navLayout/": {
      "filePath": "_navLayout/index.tsx",
      "parent": "/_navLayout"
    }
  }
}
ROUTE_MANIFEST_END */
